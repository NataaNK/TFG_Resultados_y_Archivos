# general settings for image SR training
name: IPG_SR_x2
model_type: IPGModel
scale: 2
num_gpu: auto
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    task: SR
    name: DF2K
    type: PairedImageDataset
    dataroot_gt: ../SRdata/DF2K/HR
    dataroot_lq: ../SRdata/DF2K/LR_bicubic/X2
    filename_tmpl: '{}x2'
    io_backend:
      type: disk

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  val_1:
    task: SR
    name: Set5
    type: PairedImageDataset
    dataroot_gt: ../SRdata/BasicSR_SR_test/Set5/GTmod2
    dataroot_lq: ../SRdata/BasicSR_SR_test/Set5/LRbicx2
    io_backend:
      type: disk

  val_2:
    task: SR
    name: Set14
    type: PairedImageDataset
    dataroot_gt: ../SRdata/BasicSR_SR_test/Set14/GTmod2
    dataroot_lq: ../SRdata/BasicSR_SR_test/Set14/LRbicx2
    io_backend:
      type: disk

  val_3:
    task: SR
    name: Urban100
    type: PairedImageDataset
    dataroot_gt: ../SRdata/BasicSR_SR_test/Urban100/GTmod2
    dataroot_lq: ../SRdata/BasicSR_SR_test/Urban100/LRbicx2
    io_backend:
      type: disk

# network structures
network_g:
  type: IPG
  upscale: 2
  in_chans: 3
  img_size: 64
  window_size: 16
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 4
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'
  graph_flags: [1, 1, 1, 1, 1, 1] # BOOL
  stage_spec: [['GN','GS','GN','GS','GN','GS'],['GN','GS','GN','GS','GN','GS'],['GN','GS','GN','GS','GN','GS'],['GN','GS','GN','GS','GN','GS'],['GN','GS','GN','GS','GN','GS'],['GN','GS','GN','GS','GN','GS']]
  dist_type: 'cossim'
  top_k: 256
  head_wise: 0 # BOOL
  sample_size: 32
  graph_switch: 1 # BOOL
  flex_type: 'interdiff_plain'
  FFNtype: 'basic-dwconv3'
  conv_scale: 0.01
  conv_type: 'dwconv3-gelu-conv1-ca'
  diff_scales: [10,0,0,0,0,0]


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [250000, 400000, 450000, 475000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
# validation settings
val:
  val_freq: !!float 1e4
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true



# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500